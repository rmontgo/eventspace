from django.test import TestCase
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
import datetime

class IntegrationTestCase(TestCase):
    def setUp(self):
        self.browser = webdriver.Firefox()
        self.browser.set_window_size(1800, 900)
        self.browser.implicitly_wait(3)
        self.browser.get('http://127.0.0.1:8000')

    def test_add_event(self):
        self.browser.find_element(By.LINK_TEXT, "Login").click()
        self.browser.find_element(By.NAME, "username").send_keys("Monty")
        self.browser.find_element(By.NAME, "password").send_keys("Icfhway1!" + Keys.RETURN)
        # Given logged in to user event view

        self.browser.find_element(By.LINK_TEXT, "Manage My Events").click()
        self.browser.find_element(By.LINK_TEXT, "Add Event").click()
        self.browser.find_element(By.NAME, "title").send_keys("Selenium Test Event")
        self.browser.find_element(By.NAME, "location").send_keys("The World of Web!")
        self.browser.find_element(By.NAME, "description").send_keys("This event was generated by a web driver")
        time = datetime.datetime.now()
        self.browser.find_element(By.NAME, "start").send_keys(str(time.hour) + str(time.minute))
        self.browser.find_element(By.NAME, "Submit").click()
        success_message = self.browser.find_element(By.CLASS_NAME, 'text-success')
        self.assertEqual(success_message.text, 'Event successfully created')
        self.browser.quit()

    def test_update_event(self):
        self.browser.find_element(By.LINK_TEXT, "Login").click()
        self.browser.find_element(By.NAME, "username").send_keys("Monty")
        self.browser.find_element(By.NAME, "password").send_keys("Icfhway1!" + Keys.RETURN)
        # Given logged in to user event view

        self.browser.find_element(By.LINK_TEXT, "Manage My Events").click()
        self.browser.find_element(By.LINK_TEXT, "Update").click()
        self.browser.find_element(By.NAME, "title").clear()
        self.browser.find_element(By.NAME, "title").send_keys("Updated Selenium Test Event")
        time = datetime.datetime.now()
        self.browser.find_element(By.NAME, "Submit").click()
        success_message = self.browser.find_element(By.CLASS_NAME, 'text-success')
        self.assertEqual(success_message.text, 'Event successfully updated')
        self.browser.quit()

    def test_login(self):
        # Given on homepage
        self.browser.find_element(By.LINK_TEXT, "Login").click()
        self.browser.find_element(By.NAME, "username").send_keys("Monty")
        self.browser.find_element(By.NAME, "password").send_keys("Icfhway1!" + Keys.RETURN)
        self.browser.quit()


    def test_delete_event(self):
        self.browser.find_element(By.LINK_TEXT, "Login").click()
        self.browser.find_element(By.NAME, "username").send_keys("Monty")
        self.browser.find_element(By.NAME, "password").send_keys("Icfhway1!" + Keys.RETURN)
        # Given logged in to user event view

        self.browser.find_element(By.LINK_TEXT, "Manage My Events").click()
        self.browser.find_element(By.LINK_TEXT, "Delete").click()
        self.browser.find_element(By.NAME, "Confirm").click()
        success_message = self.browser.find_element(By.CLASS_NAME, 'text-success')
        self.assertEqual(success_message.text, 'Event successfully deleted')
        self.browser.quit()

        
    def test_logout(self):
        self.browser.find_element(By.LINK_TEXT, "Login").click()
        self.browser.find_element(By.NAME, "username").send_keys("Monty")
        self.browser.find_element(By.NAME, "password").send_keys("Icfhway1!" + Keys.RETURN)
        # Given user is logged in
        buttons = self.browser.find_element(By.XPATH, "//*[text()='Log out']").click()
        self.browser.quit()

    
